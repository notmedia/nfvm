#!/usr/bin/env node

'use strict';

const caporal = require('caporal');

const pkg = require('../package.json');
const Manager = require('../lib/Manager');

const manager = new Manager(true);

caporal.version(pkg.version);

caporal.command('init')
  .description('creates .nfvmrc.json config file')
  .action(() => {
    manager.initialize();
  });

caporal.command('create')
  .argument('<pack>')
  .option('-f, --file')
  .option('-v, --version <version>')
  .option('--folder <path>')
  .option('-g, --global')
  .action((args, options) => {
    if (options.file) {
      manager.createFile(args.pack, options.version, options.global);
    } else {
      manager.createPack(args.pack, options.version, options.folder, options.global);
    }
  });

caporal.command('remove')
  .argument('<pack>')
  .option('-f, --file <name>')
  .option('-v, --version <version>')
  .option('-g, --global')
  .action((args, options) => {

  });

caporal.command('set')
  .argument('<pack>')
  .argument('<version>')
  .option('-g, --global')
  .action((args, options) => {

  });

caporal.command('list')
  .option('-p, --pack <pack>')
  .option('-g, --global')
  .action((args, options) => {
    manager.list(options.pack, options.global);
  });

caporal.parse(process.argv);
